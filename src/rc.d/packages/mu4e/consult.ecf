;;; -*- mode: emacs-lisp; lexical-binding: t; coding: utf-8-unix; -*-
;;; Consult Mu4e asynchronously in GNU Emacs
;;; https://github.com/armindarvish/consult-mu

(desire 'consult-mu :recipe '(:fetcher github :repo "armindarvish/consult-mu" :branch "main" :files ("*.el" "extras/*.el")))
(require 'consult-mu)

;;; Maximum number of results shown in minibuffer
(setq consult-mu-maxnum 200)
;;;show preview when pressing any keys
(setq consult-mu-preview-key 'any)
;;; Do not mark email as read when previewed. If you turn this to t, be aware that the auto-loaded preview if the preview-key above is 'any would also get marked as read!
(setq consult-mu-mark-previewed-as-read nil)
;;; Mark email as read when selected.
(setq consult-mu-mark-viewed-as-read t)
;;; Use reply to all when composing reply emails
(setq consult-mu-use-wide-reply t)
;;; Define a template for headers view in minibuffer. The example below adjusts the width based on the width of the screen.
(setq consult-mu-headers-template
      (lambda () (concat "%f" (number-to-string (floor (* (frame-width) 0.15))) "%s" (number-to-string (floor (* (frame-width) 0.5))) "%d13" "%g" "%x")))

;;; Create a list of saved searches for quick access using `histroy-next-element' with `M-n' in minibuffer. Note the "#" character at the beginning of each query! Change these according to
(setq consult-mu-saved-searches-dynamics '("#flag:unread"))
(setq consult-mu-saved-searches-async '("#flag:unread"))

;;; Require embark actions for marking, replying, forwarding, etc. directly from minibuffer
(require 'consult-mu-embark)

;;; Require extra module for composing (e.g. for interactive attachment) as well as embark actions
(require 'consult-mu-compose)
(require 'consult-mu-compose-embark)

;;; Require extra module for searching contacts and runing embark actions on contacts
(require 'consult-mu-contacts)
(require 'consult-mu-contacts-embark)

;;; Change the prefiew key for compose so you don't open a preview of every file when selecting files to attach
(setq consult-mu-compose-preview-key "M-o")

;;; Pick a key to bind to consult-mu-compose-attach in embark-file-map
(setq consult-mu-embark-attach-file-key "C-a")
(setq consult-mu-contacts-ignore-list '("^.*no.*reply.*"))
(setq consult-mu-contacts-ignore-case-fold-search t)
(consult-mu-compose-embark-bind-attach-file-key)

;;; Choose if you want to use dired for attaching files (choice of 'always, 'in-dired, or nil)
(setq consult-mu-compose-use-dired-attachment 'always)

;;;
