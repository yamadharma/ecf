;;; Remap keymaps -*- mode: emacs-lisp; lexical-binding: t; coding: utf-8-unix; -*-
;; https://emacs-helm.github.io/helm/
;; https://github.com/emacs-helm/helm/wiki

;; The default "C-x c" is quite close to "C-x C-c", which quits Emacs.
;; Changed to "C-c h". Note: We must set "C-c h" globally, because we
;; cannot change `helm-command-prefix-key' once `helm-config' is loaded.
(global-set-key (kbd "C-c h") 'helm-command-prefix)
(global-unset-key (kbd "C-x c"))

(define-key helm-map (kbd "<tab>") 'helm-execute-persistent-action) ; rebind tab to run persistent action
(define-key helm-map (kbd "C-i") 'helm-execute-persistent-action) ; make TAB work in terminal
(define-key helm-map (kbd "C-z")  'helm-select-action) ; list actions using C-z

(global-set-key (kbd "M-y") 'helm-show-kill-ring)
(global-set-key (kbd "C-x b") 'helm-mini)


(define-key global-map [remap find-file] 		#'helm-find-files)
(define-key global-map [remap occur] 			#'helm-occur)
(define-key global-map [remap list-buffers] 		#'helm-buffers-list)
(define-key global-map [remap dabbrev-expand] 		#'helm-dabbrev)
(define-key global-map [remap execute-extended-command] #'helm-M-x)
(define-key global-map [remap apropos-command] 		#'helm-apropos)
(define-key global-map [remap find-library]             #'helm-locate-library)
(define-key global-map [remap bookmark-jump]            #'helm-bookmarks)
(define-key global-map [remap execute-extended-command] #'helm-M-x)
(define-key global-map [remap locate]                   #'helm-locate)
(define-key global-map [remap imenu]                    #'helm-semantic-or-imenu)
(define-key global-map [remap noop-show-kill-ring]      #'helm-show-kill-ring)
;; (define-key global-map [remap persp-switch-to-buffer]   #'+helm/workspace-mini)
(define-key global-map [remap switch-to-buffer]         #'helm-buffers-list)
;; (define-key global-map [remap projectile-find-file]     #'+helm/projectile-find-file)
(define-key global-map [remap projectile-recentf]       #'helm-projectile-recentf)
(define-key global-map [remap projectile-switch-project] #'helm-projectile-switch-project)
(define-key global-map [remap projectile-switch-to-buffer] #'helm-projectile-switch-to-buffer)
(define-key global-map [remap recentf-open-files]       #'helm-recentf)
(define-key global-map [remap yank-pop]                 #'helm-show-kill-ring)

(unless (boundp 'completion-in-region-function)
  (define-key lisp-interaction-mode-map [remap completion-at-point] 'helm-lisp-completion-at-point)
  (define-key emacs-lisp-mode-map       [remap completion-at-point] 'helm-lisp-completion-at-point))

;; helm is too heavy for `find-file-at-point'
(add-to-list 'helm-completing-read-handlers-alist (cons #'find-file-at-point nil))

;;;
