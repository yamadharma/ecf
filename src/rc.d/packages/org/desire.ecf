;;; -*- mode: emacs-lisp; lexical-binding: t; coding: utf-8-unix; -*-
;;;

(desire 'org-contrib)

(require 'org)

;;
;; org-mode dirs
;;

(defvar orgmode-home-dir
  (expand-file-name "~/work/org/")
  "*Name of directory where various org-mode related files reside."
)

(if (not (file-directory-p orgmode-home-dir))
  (make-directory orgmode-home-dir t)
)

;; Set to the location of your Org files on your local system
(setq org-directory orgmode-home-dir)

(setq org-directory-todo (concat org-directory "/todo/"))

;;; Data directory
(setq org-directory-data (expand-file-name "~/data/org/"))
(if (not (file-directory-p org-directory-data))
  (make-directory org-directory-data t))

;; Agenda files
;;(unless org-agenda-files
;;  (setq org-agenda-files (list org-directory)))
(defvar org-agenda-files (list org-directory))
(add-to-list 'org-agenda-files org-directory-todo)

(org-remove-file "diary.org")
(org-remove-file "flagged.org")
;; (org-remove-file "inbox.org")

;;;
