;;; Agenda Setup

;;(unless org-agenda-files
;;  (setq org-agenda-files (list org-directory)))

(setq-default 
 ;; Different colors for different priority levels
 org-agenda-deadline-faces
 '((1.001 . error)
   (1.0 . org-warning)
   (0.5 . org-upcoming-deadline)
   (0.0 . org-upcoming-distant-deadline))
 ;; Don't monopolize the whole frame just for the agenda
 org-agenda-window-setup 'current-window
 org-agenda-skip-unavailable-files t
 ;; Shift the agenda to show the previous 3 days and the next 7 days for
 ;; better context on your week. The past is less important than the future.
 org-agenda-span 10
 org-agenda-start-on-weekday nil
 org-agenda-start-day "-3d"
 ;; Optimize `org-agenda' by inhibiting extra work while opening agenda
 ;; buffers in the background.
 ;;org-agenda-inhibit-startup t
 )

(setq org-agenda-tags-column 100) ;; from testing this seems to be a good value

(setq org-agenda-time-grid '((daily today require-timed) "----------------------" nil)
      org-agenda-skip-scheduled-if-done t
      org-agenda-skip-deadline-if-done t
      org-agenda-include-deadlines t
      org-agenda-include-diary t
      org-agenda-block-separator nil
      org-agenda-compact-blocks t
      org-agenda-start-with-log-mode t)

;;; Remove DONE tasks from agenda view
;;; https://orgmode.org/manual/Special-Agenda-Views.html
;; (setq org-agenda-skip-function-global '(org-agenda-skip-entry-if 'todo 'done))

;; Clocktable

;; (setq org-clocktable-defaults '(:maxlevel 2 :lang "en" :scope file
;; :block nil :wstart 1 :mstart 1 :tstart nil :tend nil :step nil
;; :stepskip0 nil :fileskip0 t :tags nil :match nil :emphasize nil
;; :link nil :narrow 40! :indent t :formula nil :timestamp nil :level
;; nil :tcolumns nil :formatter nil))

;; Enable Clocktable by default
(setq org-agenda-clockreport-mode t)

;; Do not dim blocked tasks
(setq org-agenda-dim-blocked-tasks nil)

;; Custom agenda command definitions

(setq org-agenda-custom-commands
      (quote (("N" "Notes" tags "NOTE"
               ((org-agenda-overriding-header "Notes")
                (org-tags-match-list-sublevels t)))
              ("h" "Habits" tags-todo "STYLE=\"habit\""
               ((org-agenda-overriding-header "Habits")
                (org-agenda-sorting-strategy
                 '(todo-state-down effort-up category-keep))))
              (" " "Agenda"
               ((agenda "" nil)
                (tags "REFILE"
                      ((org-agenda-overriding-header "Tasks to Refile")
                       (org-tags-match-list-sublevels nil)))
                (tags-todo "-CNCL/!"
                           ((org-agenda-overriding-header "Stuck Projects")
                            (org-tags-match-list-sublevels 'indented)
                            (org-agenda-skip-function 'ecf/skip-non-stuck-projects)))
                (tags-todo "-WAIT-CNCL/!NEXT"
                           ((org-agenda-overriding-header "Next Tasks")
                            (org-agenda-skip-function 'ecf/skip-projects-and-habits-and-single-tasks)
                            (org-agenda-todo-ignore-scheduled t)
                            (org-agenda-todo-ignore-deadlines t)
                            (org-tags-match-list-sublevels t)
                            (org-agenda-sorting-strategy
                             '(todo-state-down effort-up category-keep))))
                (tags-todo "-REFILE-CNCL/!-HOLD-WAIT"
                           ((org-agenda-overriding-header "Tasks")
                            (org-agenda-skip-function 'ecf/skip-project-tasks-maybe)
                            (org-agenda-todo-ignore-scheduled t)
                            (org-agenda-todo-ignore-deadlines t)
                            (org-agenda-sorting-strategy
                             '(category-keep))))
                (tags-todo "-CNCL/!"
                           ((org-agenda-overriding-header "Projects")
                            (org-agenda-skip-function 'ecf/skip-non-projects)
                            (org-agenda-todo-ignore-scheduled 'future)
                            (org-agenda-todo-ignore-deadlines 'future)
                            (org-agenda-sorting-strategy
                             '(category-keep))))
                (tags-todo "-CNCL/!WAIT|HOLD"
                           ((org-agenda-overriding-header "Waiting and Postponed Tasks")
                            (org-agenda-skip-function 'ecf/skip-projects-and-habits)
                            (org-agenda-todo-ignore-scheduled t)
                            (org-agenda-todo-ignore-deadlines t)))
                (tags "-REFILE/"
                      ((org-agenda-overriding-header "Tasks to Archive")
                       (org-agenda-skip-function 'ecf/skip-non-archivable-tasks))))
               nil)
              ("r" "Tasks to Refile" tags "REFILE"
               ((org-agenda-overriding-header "Tasks to Refile")
                (org-tags-match-list-sublevels nil)))
              ("#" "Stuck Projects" tags-todo "-CNCL/!"
               ((org-agenda-overriding-header "Stuck Projects")
                (org-agenda-skip-function 'ecf/skip-non-stuck-projects)))
              ("n" "Next Tasks" tags-todo "-WAIT-CNCL/!NEXT"
               ((org-agenda-overriding-header "Next Tasks")
                (org-agenda-skip-function 'ecf/skip-projects-and-habits-and-single-tasks)
                (org-agenda-todo-ignore-scheduled t)
                (org-agenda-todo-ignore-deadlines t)
                (org-tags-match-list-sublevels t)
                (org-agenda-sorting-strategy
                 '(todo-state-down effort-up category-keep))))
              ("R" "Tasks" tags-todo "-REFILE-CNCL/!-HOLD-WAIT"
               ((org-agenda-overriding-header "Tasks")
                (org-agenda-skip-function 'ecf/skip-project-tasks-maybe)
                (org-agenda-sorting-strategy
                 '(category-keep))))
              ("p" "Projects" tags-todo "-CNCL/!"
               ((org-agenda-overriding-header "Projects")
                (org-agenda-skip-function 'ecf/skip-non-projects)
                (org-agenda-todo-ignore-scheduled 'future)
                (org-agenda-todo-ignore-deadlines 'future)
                (org-agenda-sorting-strategy
                 '(category-keep))))
              ("w" "Waiting Tasks" tags-todo "-CNCL/!WAIT|HOLD"
               ((org-agenda-overriding-header "Waiting and Postponed tasks"))
               (org-agenda-skip-function 'ecf/skip-projects-and-habits)
               (org-agenda-todo-ignore-scheduled 'future)
               (org-agenda-todo-ignore-deadlines 'future))
              ("A" "Tasks to Archive" tags "-REFILE/"
               ((org-agenda-overriding-header "Tasks to Archive")
                (org-agenda-skip-function 'ecf/skip-non-archivable-tasks))))))

;; Automatically removing context based tasks with / RET
(defun ecf/org-auto-exclude-function (tag)
  "Automatic task exclusion in the agenda with / RET"
  (and (cond
        ((string= tag "@farm")
         t)
        ((string= tag "hold")
         t))
       (concat "-" tag)))

(setq org-agenda-auto-exclude-function 'ecf/org-auto-exclude-function)

;;; 
