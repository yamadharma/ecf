;;; -*- mode: emacs-lisp; lexical-binding: t; coding: utf-8-unix; -*-
;;; Capture template for org-roam

;;; do enable time-stamps
(setq time-stamp-active t)

;; (setq
;;  time-stamp-active t          ; do enable time-stamps
;;  time-stamp-pattern "5/#+LAST_MODIFIED: [%04y-%02m-%02d %a %02H:%02M]"
;;  time-stamp-format "%04y-%02m-%02d %a %02H:%02M") ; date format


;; (setq org-roam-capture-templates '(("d" "default" plain "%?"
;;      :if-new (file+head "%<%Y%m%d%H%M%S>-${slug}.org"
;;                         "#+title: ${title}\n")
;;      :unnarrowed t)))

;; (setq org-roam-capture-templates
;;       '(("d" "default" plain
;;          (function org-roam-capture--get-point)
;;          "%?"
;;          :file-name "%<%Y%m%d%H%M%S>-${slug}"
;;          :head "#+title: ${title}\n#+created: %u\n#+last_modified: %U\n\n"
;;          :unnarrowed t)))

;; (setq org-roam-capture-ref-templates
;;       '(("r" "ref" plain
;;          (function org-roam-capture--get-point)
;;          ""
;;          :file-name "web/${slug}"
;;          :head "#+title: ${title}\n#+roam_key: ${ref}\n#+created: %u\n#+last_modified: %U\n\n%(zp/org-protocol-insert-selection-dwim \"%i\")"
;;          :unnarrowed t)
;;         ("i" "incremental" plain
;;          (function org-roam-capture--get-point)
;;          "* %?\n%(zp/org-protocol-insert-selection-dwim \"%i\")"
;;          :file-name "web/${slug}"
;;          :head "#+title: ${title}\n#+roam_key: ${ref}\n#+created: %u\n#+last_modified: %U\n\n"
;;          :unnarrowed t
;;          :empty-lines-before 1)))

;; (setq org-roam-dailies-capture-templates
;;       '(("d" "default" entry
;;          #'org-roam-capture--get-point
;;          "* %?"
;;          :file-name "scratch/%<%Y-%m-%d>"
;;          :head "#+title: %<%Y-%m-%d>\n\n"
;;          :add-created t)))

(setq org-roam-capture-templates
      '(("d" "per file flow (Default)" plain "%?"
	 :target
	 (file+head
	  "public/%<%Y%m%d%H%M%S>-${slug}.org"
	  "#+title: ${title}
#+created: %U
#+last_modified: %U
#+language: ru
#+date: %<%Y-%m-%dT%H:%M:%S%:z>
#+filetags:

:SETUP_LOCAL:
#+startup: overview hidestars hideblocks indent num inlineimages
#+options: ^:{} num:t
:END:
:SETUP_HUGO:
#+hugo_section: ru/post/%<%Y>
#+export_file_name: %<%Y-%m-%d>-${slug}
#+hugo_custom_front_matter: :slug ${slug}
#+hugo_categories: 
#+hugo_tags:
:END:\n
\n
#+hugo: more\n
@@hugo:{{< toc >}}@@\n")
	 :immediate-finish t
         :jump-to-captured t
	 :unnarrowed t)
("p" "Private" plain "%?"
	 :target
	 (file+head
	  "private/%<%Y%m%d%H%M%S>-${slug}.org"
	  "#+title: ${title}
#+created: %U
#+last_modified: %U
#+language: ru
#+date: %<%Y-%m-%dT%H:%M:%S%:z>
#+filetags:

:SETUP_LOCAL:
#+startup: overview hidestars hideblocks indent num inlineimages
#+options: ^:{} num:t
:END:
:SETUP_HUGO:
#+hugo_section: ru/post/%<%Y>
#+export_file_name: %<%Y-%m-%d>-${slug}
#+hugo_custom_front_matter: :slug ${slug}
#+hugo_categories: 
#+hugo_tags:
:END:\n
\n
#+hugo: more\n
@@hugo:{{< toc >}}@@\n")
	 :immediate-finish t
         :jump-to-captured t
	 :unnarrowed t)	
	("s" "per Section flow (two language)" plain "%?"
	 :if-new
	 (file+head
	  "%<%Y%m%d%H%M%S>-${slug}.org"
	  "#+title: ${title}
#+created: %U
#+last_modified: %U
#+language: ru
#+date: %<%Y-%m-%dT%H:%M:%S%:z>
#+filetags:

:SETUP_LOCAL:
#+startup: overview hidestars hideblocks indent num inlineimages
#+options: ^:{} num:t
:END:
:SETUP_HUGO:
#+hugo_custom_front_matter: :slug ${slug}
:END:

* TODO ${title}
:PROPERTIES:
:export_hugo_section: ru/post/%<%Y>
:export_file_name: %<%Y-%m-%d>-${slug}
:END:

#+hugo: more\n
@@hugo:{{< toc >}}@@\n

* TODO ${title} (English)
:PROPERTIES:
:export_hugo_section: en/post/%<%Y>
:export_file_name: %<%Y-%m-%d>-${slug}
:END:

#+hugo: more\n
@@hugo:{{< toc >}}@@\n
")
	 :immediate-finish t
         :jump-to-captured t
	 :
	 unnarrowed t)
	))

;;;
