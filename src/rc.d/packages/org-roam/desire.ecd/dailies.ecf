;;; -*- mode: emacs-lisp; lexical-binding: t; coding: utf-8-unix; -*-
;;; Daily-notes

(require 'org-roam-dailies)

;; Excluding Nodes and Edges
(setq org-roam-graph-exclude-matcher '("private" "dailies"))

;; Path to daily-notes
(setq org-roam-dailies-directory "daily/")
(unless (file-directory-p (concat org-roam-directory "/" org-roam-dailies-directory))
  (make-directory (concat org-roam-directory "/" org-roam-dailies-directory) t))

;; Capture templates for daily-notes in Org-roam
;; (setq org-roam-dailies-capture-templates
;;       '(("d" "default" entry
;;          "* %?"
;;          :target (file+head "%<%Y-%m-%d>.org"
;;                             "#+title: %<%Y-%m-%d>\n"))))

(setq org-roam-dailies-capture-templates
      '(("d" "default" entry "* %<%I:%M %p>: %?"
	 :if-new (file+head "%<%Y-%m-%d>.org" "#+title: %<%Y-%m-%d>\n"))))

;; (setq org-roam-dailies-capture-templates
;;       '(("d" "default" entry "* %?"
;;	 :if-new
;;          (file+head "%(concat org-roam-dailies-directory \"/%<%Y-%m-%d>.org\")"
;;                     "#+title: %<%Y-%m-%d>"))))

;;; Define key bindings

;;; Capture a note for today (C-c n d n)
(define-key org-roam-dailies-map (kbd "n") #'org-roam-dailies-capture-today)
;;; Capture a note for yesterday (C-c n d Y)
(define-key org-roam-dailies-map (kbd "Y") #'org-roam-dailies-capture-yesterday)
;;; Capture a note for tomorrow (C-c n d T)
(define-key org-roam-dailies-map (kbd "T") #'org-roam-dailies-capture-tomorrow)
;;; Go to the file for yesterday (C-c n d y)
(define-key org-roam-dailies-map (kbd "y") #'org-roam-dailies-goto-yesterday)
;;; Go to the file for tomorrow (C-c n d t)
(define-key org-roam-dailies-map (kbd "t") #'org-roam-dailies-goto-tomorrow)
;;; Capture a note for a specific date (C-c n d v)
(define-key org-roam-dailies-map (kbd "v") #'org-roam-dailies-capture-date)
;;; Go to the file for a specific date (C-c n d c)
(define-key org-roam-dailies-map (kbd "c") #'org-roam-dailies-goto-date)
;;; Go back one existing date file (C-c n d b)
(define-key org-roam-dailies-map (kbd "b") #'org-roam-dailies-goto-next-note)
;;; Go forward one existing date file (C-c n d f)
(define-key org-roam-dailies-map (kbd "f") #'org-roam-dailies-goto-previous-note)

(fset 'org-roam-dailies-map org-roam-dailies-map)
(global-set-key (kbd "C-c n d") #'org-roam-dailies-map)

;; (global-set-key (kbd "C-c n d") #'org-roam-dailies-capture-today)

;;;
